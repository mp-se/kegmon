<!doctype html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no"><meta name="description" content=""><title>Keg Monitor</title><link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous"><style>.row-margin-10{margin-top:1em}.navbar{background-color:#e3f2fd}.themed-container{background-color:#e3f2fd}</style></head><body class="py-4"><script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script><script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script><script src="https://cdn.jsdelivr.net/npm/chart.js@^4"></script><!-- START MENU --><nav class="navbar navbar-expand-lg navbar-dark bg-primary"><div class="container"><a class="navbar-brand" href="/index.htm">Beer Keg Monitor</a> <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="navbarNav"><ul class="navbar-nav"><li class="nav-item"><a class="nav-link" href="/index.htm"><b>Home</b></a></li><li class="nav-item"><a class="nav-link" href="/beer.htm">Beer</a></li><li class="nav-item dropdown"><a class="nav-link dropdown-toggle active" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">Configuration</a><ul class="dropdown-menu"><li><a class="dropdown-item" href="/config.htm">Configuration</a></li><li><a class="dropdown-item" href="/calibration.htm">Scale calibration</a></li><li><a class="dropdown-item" href="#">History graph</a></li><li><a class="dropdown-item" href="/stability.htm">Stability</a></li><li><a class="dropdown-item" href="/upload.htm">Upload firmware</a></li><li><a class="dropdown-item" href="/backup.htm">Backup & Restore</a></li></ul></li><li class="nav-item"><a class="nav-link" href="/about.htm">About</a></li></ul></div><div class="spinner-border text-light" id="spinner" role="status"></div></div></nav><!-- START MAIN INDEX --><div class="container row-margin-10"><div class="alert alert-success alert-dismissible hide fade d-none" role="alert"><div id="alert"></div><button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div><script type="text/javascript">function showError(s){console.log("Error:"+s),$(".alert").removeClass("alert-success").addClass("alert-danger").removeClass("hide").addClass("show").removeClass("d-none"),$("#alert").text(s)}function showSuccess(s){console.log("Success:"+s),$(".alert").addClass("alert-success").removeClass("alert-danger").removeClass("hide").addClass("show").removeClass("d-none"),$("#alert").text(s)}$("#alert-btn").click(function(s){console.log("Disable"),$(".alert").addClass("hide").removeClass("show").addClass("d-none")})</script><div class="accordion" id="accordion"><div class="accordion-item"><h2 class="accordion-header" id="headingGraph"><button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseGraph" aria-expanded="true" aria-controls="collapseGraph"><b>History graph</b></button></h2><div id="collapseGraph" class="accordion-collapse" aria-labelledby="headingGraph" data-bs-parent="#accordion"><div class="accordion-body"><canvas id="kegChart"></canvas><canvas id="pourChart"></canvas><div class="row mb-3"><button class="col-md-2 btn btn-secondary" id="refresh-btn" data-bs-toggle="tooltip" title="Refresh graphs">Manual refresh</button></div></div></div></div></div></div><script>// Data arrays for chart
    var labelsKeg = [];
    var dataKeg1 = [];
    var dataKeg2 = [];
    var kegChart = 0;

    var labelsPour = [];
    var dataPour1 = [];
    var dataPour2 = [];
    var pourChart = 0;

    const kegData = {
      data: {
        labels: labelsKeg,
        datasets: [{
          type: 'line',
          label: 'Keg 1',
          borderColor: "#85C1E9",
          backgroundColor: "#AED6F1",
          pointStyle: 'circle',
          pointRadius: 5,
          pointHoverRadius: 10,
          data: dataKeg1,
        },{
          type: 'line',
          label: 'Keg 2',
          borderColor: '#76D7C4',
          backgroundColor: '#A3E4D7',
          pointStyle: 'circle',
          pointRadius: 5,
          pointHoverRadius: 10,
          data: dataKeg2,
        }],
        options: {
          responsive: true,
          scales: {
            x: {
              type: 'time',
            },
            y: {
              title: {
                display: true,
                text: 'liters'
              }
            }
          }
        }
      }
    };

    const pourData = {
      data: {
        labels: labelsPour,
        datasets: [{
          type: 'bar',
          label: 'Pour 1',
          borderColor: '#F8C471',
          backgroundColor: '#FAD7A0',
          borderWidth: 2,
          borderRadius: 5,
          borderSkipped: false,
          data: dataPour1,
        },{
          type: 'bar',
          label: 'Pour 2',
          borderColor: '#F0B27A',
          backgroundColor: '#F5CBA7',
          borderWidth: 2,
          borderRadius: 5,
          borderSkipped: false,
          data: dataPour2,
        }],
        options: {
          responsive: true,
          scales: {
            x: {
              type: 'time',
           },
            y: {
              title: {
                display: true,
                text: 'cl',
              }
            }
          }
        }
      }
    };

    window.onload = loadChartData;

    $("#refresh-btn").click(function(e){
      console.log( "Refreshing graphs" );
      loadChartData();
    });

    // Input is in liters
    function cnvKegVol(vol, format) {
      if(format == "us-oz") {
        return vol * 0.264172052;
      } else if(format == "uk-oz") {
        return vol * 0.219969157;
      }
      return vol;
    }

    // Input is in centi-liters
    function cnvPourVol(vol, format) {
      if(format == "us-oz") {
        return vol / 0.34;
      } else if(format == "uk-oz") {
        return vol / 2.84;
      }
      return vol;
    }

    function loadChartData() {
      // Last known value to handle 'nan' elements in the data
      var lastKeg1 = 0.0;
      var lastKeg2 = 0.0;
      var lastPour1 = 0.0;
      var lastPour2 = 0.0;
      var maxItems = 50;

      $('#spinner').show(); 

      url = "/api/config";
      //url = "../test/config.json";
      $.getJSON(url, function(data) { 
        console.log( data );
        console.log( data["volume-unit"] )

        var unit = data["volume-unit"];

        if(unit == "cl") {
          ku = "liters";
          pu = "cl";
        }
        else if(unit == "us-oz")  {
          ku = "US gallons";
          pu = "fl. oz.";
        }
        else if(unit == "uk-oz")  {
          ku = "Imperial gallons";
          pu = "fl. oz.";
        }

        kegData["data"]["datasets"][0]["label"] = "Keg 1 (" + ku + ")";
        kegData["data"]["datasets"][1]["label"] = "Keg 2 (" + ku + ")";

        pourData["data"]["datasets"][0]["label"] = "Pour 1 (" + pu + ")";
        pourData["data"]["datasets"][1]["label"] = "Pour 2 (" + pu + ")";

        var url = "/levels";
        //var url = "/test/graph.txt";
        $.get(url, function (data2) {
          var url = "/levels2";
          //var url = "/test/graph2.txt";
          $.get(url, function (data3) {
            data2 = data3 + data2
          })
          .fail(function () {
              // Ignore this, not an error
          })
          .always(function() {
            console.log(data2);

            var lines = data2.split('\n');        
            for(var line = 0; line < lines.length; line++) {
              var points = lines[line].split(';');

              if(points.length>4) {
                yt = Date.parse( points[0] );

                // Data set for kegs
                labelsKeg.push( points[0] );

                if(points[1]=="nan") points[1] = lastKeg1;
                lastKeg1 = parseFloat(points[1]);
                dataKeg1.push( { y: cnvKegVol(lastKeg1, unit), x: yt } );

                if(points[2]=="nan") points[2] = lastKeg2;
                lastKeg2 = parseFloat(points[2]);
                dataKeg2.push( { y: cnvKegVol(lastKeg2, unit), x: yt } );

                // Data set for pours          
                if(points[3]=="nan" && points[4]=="nan") {
                  // Skip value
                } else {
                  labelsPour.push( points[0] );

                  if(points[3]=="nan") points[3] = 0;
                  lastPour1 = parseFloat(points[3])*100;
                  dataPour1.push( { y: cnvPourVol(lastPour1, unit), x: yt } );
                  if(points[4]=="nan") points[4] = 0;
                  lastPour2 = parseFloat(points[4])*100;
                  dataPour2.push( { y: cnvPourVol(lastPour2, unit), x: yt } );
                }
              }
            }

            // Limit the number of items to show
            while (labelsKeg.length > maxItems) {
              labelsKeg.shift();
              dataKeg1.shift();
              dataKeg2.shift();
            }

            while (labelsPour.length > maxItems) {
              labelsPour.shift();
              dataPour1.shift();
              dataPour2.shift();
            }

            console.log( "Creating chart" );
            createChart();
          });
        })
        .fail(function () {
          showError("Failed to load level history from device, can be that no data has been logged.");
          $('#spinner').hide(); 
        })
        .always(function() {
        });
      })
      .fail(function () {
        showError("Failed to load level history from device, can be that no data has been logged.");
        $('#spinner').hide(); 
      })
      .always(function() {
        $('#spinner').hide(); 
      });
    }

    function createChart() {
      if( kegChart )
        kegChart.destroy();

      kegChart = new Chart(
        document.getElementById('kegChart'),
        kegData,
      );

      if( pourChart )
        pourChart.destroy();

      pourChart = new Chart(
        document.getElementById('pourChart'),
        pourData,
      );
    }</script><!-- START FOOTER --><div class="container themed-container bg-primary text-light row-margin-10">(C) Copyright 2022-2024 Magnus Persson</div></body></html>