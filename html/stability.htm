<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <title>Keg Monitor</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
  <style>
    .row-margin-10 {
      margin-top: 1.0em;
    }

    .navbar {
      background-color: #e3f2fd;
    }

    .themed-container {
      background-color: #e3f2fd;
    }
  </style>
</head>

<body class="py-4">

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@^4"></script>
  <script src="https://cdn.jsdelivr.net/npm/moment@^2"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@^1"></script>

  <!-- START MENU -->

  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container">
      <a class="navbar-brand" href="/index.htm">Beer Keg Monitor</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/index.htm"><b>Home</b></a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/beer.htm">Beer</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle active" href="#" role="button" data-bs-toggle="dropdown"
              aria-expanded="false">
              Configuration
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="/config.htm">Configuration</a></li>
              <li><a class="dropdown-item" href="/calibration.htm">Scale calibration</a></li>
              <li><a class="dropdown-item" href="/graph.htm">History graph</a></li>
              <li><a class="dropdown-item" href="#">Stability</a></li>
              <li><a class="dropdown-item" href="/upload.htm">Upload firmware</a></li>
              <li><a class="dropdown-item" href="/backup.htm">Backup & Restore</a></li>
            </ul>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/about.htm">About</a>
          </li>
        </ul>
      </div>
      <div class="spinner-border text-light" id="spinner" role="status"></div>
    </div>
  </nav>

  <!-- START MAIN INDEX -->

  <div class="container row-margin-10">

    <div class="alert alert-success alert-dismissible hide fade d-none" role="alert">
      <div id="alert"></div>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

    <script type="text/javascript">
      function showError(msg) {
        console.log("Error:" + msg);
        $('.alert').removeClass('alert-success').addClass('alert-danger').removeClass('hide').addClass('show').removeClass('d-none');
        $('#alert').text(msg);
      }

      function showSuccess(msg) {
        console.log("Success:" + msg);
        $('.alert').addClass('alert-success').removeClass('alert-danger').removeClass('hide').addClass('show').removeClass('d-none');
        $('#alert').text(msg);
      }

      $("#alert-btn").click(function (e) {
        console.log("Disable");
        $('.alert').addClass('hide').removeClass('show').addClass('d-none');
      });    
    </script>

    <div class="accordion" id="accordion">
      <div class="accordion-item">
        <h2 class="accordion-header" id="headingStability">
          <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseStability"
            aria-expanded="true" aria-controls="collapseStability">
            <b>Stability</b>
          </button>
        </h2>
        <div id="collapseStability" class="accordion-collapse collapse show" aria-labelledby="headingStability"
          data-bs-parent="#accordion">
          <div class="accordion-body">
            <div class="row mb-3">
              <div class="col-md-4 bg-light">Count</div>
              <div class="col-md-2 bg-light" id="count1">Loading...</div>
              <div class="col-md-2 bg-light" id="count2">Loading...</div>
            </div>
            <div class="row mb-3">
              <div class="col-md-4 bg-light">Min</div>
              <div class="col-md-2 bg-light" id="min1">Loading...</div>
              <div class="col-md-2 bg-light" id="min2">Loading...</div>
            </div>
            <div class="row mb-3">
              <div class="col-md-4 bg-light">Max</div>
              <div class="col-md-2 bg-light" id="max1">Loading...</div>
              <div class="col-md-2 bg-light" id="max2">Loading...</div>
            </div>
            <div class="row mb-3">
              <div class="col-md-4 bg-light">Average</div>
              <div class="col-md-2 bg-light" id="ave1">Loading...</div>
              <div class="col-md-2 bg-light" id="ave2">Loading...</div>
            </div>
            <div class="row mb-3">
              <div class="col-md-4 bg-light">Std. deviation</div>
              <div class="col-md-2 bg-light" id="stddev1">Loading...</div>
              <div class="col-md-2 bg-light" id="stddev2">Loading...</div>
            </div>
            <div class="row mb-3">
              <div class="col-md-4 bg-light">Deviation (%)</div>
              <div class="col-md-2 bg-light" id="dev1">Loading...</div>
              <div class="col-md-2 bg-light" id="dev2">Loading...</div>
            </div>
            <button class="btn btn-secondary" id="clear-btn" data-bs-toggle="tooltip"
              title="Clear the stability statistics">Clear statistics</button>
          </div>
        </div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header" id="headingScale1">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseScale1"
          aria-expanded="true" aria-controls="collapseScale1">
          <b>Scale 1</b>
        </button>
      </h2>
      <div id="collapseScale1" class="accordion-collapse collapse show" aria-labelledby="headingScale1"
        data-bs-parent="#accordion">

        <div class="accordion-body">
          <form action="" method="">
          <div class="row mb-3">
            <label for="display-layout" class="col-sm-2 col-form-label">Display layout</label>
            <div class="col-sm-2">
              <!-- update interval in script is 5 seconds -->
              <select class="form-select" id="scale-time1" name="scale-time1" data-bs-toggle="tooltip"
                title="How much data is to be shown in graph">
                <option value="720">1 h</option>
                <option value="1440">2 h</option>
                <option value="2160">3 h</option>
              </select>            
            </div>
            <label for="scale-time1" class="col-sm-8 col-form-label">Values are only stored in the browser so changing the interval or refreshing browser will affect graphs.</label>
          </div>
          <div class="row mb-3">
            <label class="col-sm-2 col-form-label">Last delta</label>
            <label class="col-sm-8 col-form-label" id="scale-delta1">searching</label>
          </div>
        </form>
          <div class="row mb-3">
            <canvas id="scale1"></canvas>
          </div>
        </div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header" id="headingScale2">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseScale2"
          aria-expanded="true" aria-controls="collapseScale2">
          <b>Scale 2</b>
        </button>
      </h2>
      <div id="collapseScale2" class="accordion-collapse collapse show" aria-labelledby="headingScale2"
        data-bs-parent="#accordion">
        <div class="accordion-body">
          <form action="" method="">
          <div class="row mb-3">
            <label for="display-layout" class="col-sm-2 col-form-label">Display layout</label>
            <div class="col-sm-2">
              <!-- update interval in script is 5 seconds -->
              <select class="form-select" id="scale-time2" name="scale-time2" data-bs-toggle="tooltip"
                title="How much data is to be shown in graph">
                <option value="720">1 h</option>
                <option value="1440">2 h</option>
                <option value="2160">3 h</option>
              </select>            
            </div>
            <label for="scale-time2" class="col-sm-8 col-form-label">Values are only stored in the browser so changing the interval or refreshing browser will affect graphs.</label>
          </div>
          <div class="row mb-3">
            <label class="col-sm-2 col-form-label">Last delta</label>
            <label class="col-sm-8 col-form-label" id="scale-delta2">searching</label>
          </div>
          </form>
          <div class="row mb-3">
            <canvas id="scale2"></canvas>
          </div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header" id="headingTemp">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTemp"
          aria-expanded="true" aria-controls="collapseScale2">
          <b>Temperature</b>
        </button>
      </h2>
      <div id="collapseTemp" class="accordion-collapse collapse show" aria-labelledby="headingTemp"
        data-bs-parent="#accordion">
        <div class="accordion-body">
          <form action="" method="">
          <div class="row mb-3">
            <label for="display-layout" class="col-sm-2 col-form-label">Display layout</label>
            <div class="col-sm-2">
              <!-- update interval in script is 5 seconds -->
              <select class="form-select" id="scale-time3" name="scale-time3" data-bs-toggle="tooltip"
                title="How much data is to be shown in graph">
                <option value="720">1 h</option>
                <option value="1440">2 h</option>
                <option value="2160">3 h</option>
              </select>            
            </div>
            <label for="scale-time3" class="col-sm-8 col-form-label">Values are only stored in the browser so changing the interval or refreshing browser will affect graphs.</label>
          </div>
          </form>
          <div class="row mb-3">
            <canvas id="temp"></canvas>
          </div>
      </div>
    </div>
  </div>

  <script type="text/javascript">
    var chartRaw1 = [];
    var chartKalman1 = [];
    var chartStable1 = [];
    var lastStable1 = 0;

    const dataSetChart1 = {
      datasets: [{
        label: 'Raw',
        borderColor: 'red',
        backgroundColor: 'red',
        data: chartRaw1,
        pointStyle: false
      }, {
        label: 'Kalman',
        borderColor: 'blue',
        backgroundColor: 'blue',
        data: chartKalman1,
        pointStyle: false

      }, {
        label: 'Stable',
        borderColor: 'green',
        backgroundColor: 'green',
        data: chartStable1,
        pointStyle: false

      }]
    }

    const configChart1 = {
      type: 'line',
      data: dataSetChart1,
      options: {
        responsive: true,
        interaction: {
          intersect: false,
        },
        scales: {
          x: {
            type: 'time',
            title: {
              display: true,
              text: 'Date'
            }
          },
          y: {
            title: {
              display: true,
              text: 'Weight'
            }
          }
        }
      }
    };

    var chartRaw2 = [];
    var chartKalman2 = [];
    var chartStable2 = [];
    var lastStable2 = 0;

    const dataSetChart2 = {
      datasets: [{
        label: 'Raw',
        borderColor: 'red',
        backgroundColor: 'red',
        data: chartRaw2,
        pointStyle: false

      }, {
        label: 'Kalman',
        borderColor: 'blue',
        backgroundColor: 'blue',
        data: chartKalman2,
        pointStyle: false

      }, {
        label: 'Stable',
        borderColor: 'green',
        backgroundColor: 'green',
        data: chartStable2,
        pointStyle: false
      }]
    }

    const configChart2 = {
      type: 'line',
      data: dataSetChart2,
      options: {
        responsive: true,
        interaction: {
          intersect: false,
        },
        scales: {
          x: {
            type: 'time',
            title: {
              display: true,
              text: 'Date'
            }
          },
          y: {
            title: {
              display: true,
              text: 'Weight'
            }
          }
        }
      }
    };

    var chartTemp = [];
    /*var chartHumidity = [];*/

    const dataSetChart3 = {
      datasets: [{
        label: 'Temperature',
        borderColor: 'blue',
        backgroundColor: 'blue',
        data: chartTemp,
        pointStyle: false
      }/*, {
        label: 'Humidity',
        borderColor: 'green',
        backgroundColor: 'green',
        data: chartHumidity,
        pointStyle: false
      }*/]
    }

    const configChart3 = {
      type: 'line',
      data: dataSetChart3,
      options: {
        responsive: true,
        interaction: {
          intersect: false,
        },
        scales: {
          x: {
            type: 'time',
            title: {
              display: true,
              text: 'Date'
            }
          },
          y: {
            title: {
              display: true,
              text: 'Temperature'
              /*text: 'Temperature/Humidity'*/
            }
          }
        }
      }
    };

    var myChart1 = new Chart(
      document.getElementById('scale1'),
      configChart1
    );

    var myChart2 = new Chart(
      document.getElementById('scale2'),
      configChart2
    );

    var myChart3 = new Chart(
      document.getElementById('temp'),
      configChart3
    );

    function processLevel(doc) {
      var dt = new Date().toISOString();
      var upd1 = false;
      var upd2 = false;
      var upd3 = false;

      // Process values for scale 1
      if ("level-raw1" in doc) {
        chartRaw1.push({ x: dt, y: doc["level-raw1"] });
        upd1 = true;
      }
      if ("level-kalman1" in doc) {
        chartKalman1.push({ x: dt, y: doc["level-kalman1"] });
        upd1 = true;
      }
      if ("level-stable1" in doc) {
        chartStable1.push({ x: dt, y: doc["level-stable1"] });
        upd1 = true;
      }

      // Process values for scale 2
      if ("level-raw2" in doc) {
        chartRaw2.push({ x: dt, y: doc["level-raw2"] });
        upd2 = true;
      }
      if ("level-kalman2" in doc) {
        chartKalman2.push({ x: dt, y: doc["level-kalman2"] });
        upd2 = true;
      }
      if ("level-stable2" in doc) {
        chartStable2.push({ x: dt, y: doc["level-stable2"] });
        upd2 = true;
      }
     
      // Process values for temp
      if ("temperature" in doc) {
        chartTemp.push({ x: dt, y: doc["temperature"] });
        upd3 = true;
      }
      /*if ("humidity" in doc) {
        chartHumidity.push({ x: dt, y: doc["humidity"] });
        upd3 = true;
      }*/
     
      var maxItems1 = parseInt( $("#scale-time1").val() );
      var maxItems2 = parseInt( $("#scale-time2").val() );
      var maxItems3 = parseInt( $("#scale-time3").val() );

      while( chartRaw1.length > maxItems1 ) {
        chartRaw1.shift();
        upd1 = true;
      }
      while( chartKalman1.length > maxItems1 ) {
        chartKalman1.shift();
        upd1 = true;
      }
      while( chartStable1.length > maxItems1 ) {
        chartStable1.shift();
        upd1 = true;
      }

      while( myChart2.data.labels.length > maxItems2 ) {
        myChart2.data.labels.shift();
        upd2 = true;
      }
      while( chartRaw2.length > maxItems2 ) {
        chartRaw2.shift();
        upd2 = true;
      }
      while( chartKalman2.length > maxItems2 ) {
        chartKalman2.shift();
        upd2 = true;
      }
      while( chartStable2.length > maxItems2 ) {
        chartStable2.shift();
        upd2 = true;
      }

      while( chartTemp.length > maxItems3 ) {
        chartTemp.shift();
        upd3 = true;
      }
      /*while( chartHumidity.length > maxItems3 ) {
        chartHumidity.shift();
        upd3 = true;
      }*/

      if (upd1) {
        myChart1.update('resize');
      }

      if (upd2) {
        myChart2.update('resize');
      }

      if (upd3) {
        myChart3.update('resize');
      }

      if( lastStable1 != doc["level-stable1"]) {
        var delta = doc["level-stable1"] - lastStable1;
        $("#scale-delta1").text( delta.toFixed(2) );
        lastStable1 = doc["level-stable1"];
      }

      if( lastStable2 != doc["level-stable2"]) {
        var delta = doc["level-stable2"] - lastStable2;
        $("#scale-delta2").text( delta.toFixed(2) );
        lastStable2 = doc["level-stable2"];
      }
    }
  </script>

  <script type="text/javascript">
    window.onload = start;

    $("#clear-btn").click(function (e) {
      console.log("Clear statistics");
      $.ajax({
        type: "GET",
        url: "/api/stability/clear",
        success: function (result) {
          showSuccess('Stability statistics cleared.');
        },
        error: function (result) { showError('Unable to clear stability statistics.'); }
      });
    });

    function getStatus() {
      var url = "/api/stability";
      // var url = "/test/stability.json";
      $('#spinner').show();

      $.getJSON(url, function (cfg) {
        console.log(cfg);

        var missing = "no data"

        if (cfg["stability-count1"] === undefined) {
          $("#count1").text(missing);
          $("#min1").text(missing);
          $("#max1").text(missing);
          $("#ave1").text(missing);
          $("#stddev1").text(missing);
        } else {
          $("#count1").text(cfg["stability-count1"]);
          $("#min1").text(cfg["stability-min1"]);
          $("#max1").text(cfg["stability-max1"]);
          $("#ave1").text(cfg["stability-ave1"]);
          $("#stddev1").text(cfg["stability-popdev1"]);
          $("#dev1").text((parseFloat(cfg["stability-popdev1"]) / parseFloat(cfg["stability-ave1"])).toFixed(2));
        }

        if (cfg["stability-count2"] === undefined) {
          $("#count2").text(missing);
          $("#min2").text(missing);
          $("#max2").text(missing);
          $("#ave2").text(missing);
          $("#stddev2").text(missing);
        } else {
          $("#count2").text(cfg["stability-count2"]);
          $("#min2").text(cfg["stability-min2"]);
          $("#max2").text(cfg["stability-max2"]);
          $("#ave2").text(cfg["stability-ave2"]);
          $("#stddev2").text(cfg["stability-popdev2"]);
          $("#dev2").text((parseFloat(cfg["stability-popdev2"]) / parseFloat(cfg["stability-ave2"])).toFixed(2));
        }

        // Update the graphs with current values
        processLevel(cfg);
      })
        .fail(function () {
          showError('Unable to get data from the device.');
        })
        .always(function () {
          $('#spinner').hide();
        });
    }

    function start() {
      setInterval(getStatus, 1000);
    }
  </script>

  <!-- START FOOTER -->

  <div class="container themed-container bg-primary text-light row-margin-10">(C) Copyright 2022-2024 Magnus Persson</div>
</body>

</html>